[tool.ruff]
exclude = [
  "python-stdlib",
  "unix-ffi",
]
select = [
  "ASYNC",  # flake8-comprehensions
  "C4",     # flake8-comprehensions
  "C90",    # McCabe cyclomatic complexity
  "DTZ",    # flake8-datetimez
  "E",      # pycodestyle
  "EXE",    # flake8-executable
  "F",      # Pyflakes
  "G",      # flake8-logging-format
  "ICN",    # flake8-import-conventions
  "INT",    # flake8-gettext
  "ISC",    # flake8-implicit-str-concat
  "PGH",    # pygrep-hooks
  "PIE",    # flake8-pie
  "PL",     # Pylint
  "PYI",    # flake8-pyi
  "RSE",    # flake8-raise
  "RUF",    # Ruff-specific rules
  "T10",    # flake8-debugger
  "TCH",    # flake8-type-checking
  "W",      # pycodestyle
  "YTT",    # flake8-2020
]
ignore = [
  "E722",
  "E741",  # 'l' is currently widely used
  "F401",
  "F403",
  "F405",
  "E501",  # line length, recommended to disable
  "ISC001",
  "ISC003",  # micropython does not support implicit concatenation of f-strings
  "PIE810",  # micropython does not support passing tuples to .startswith or .endswith
  "PLC1901",
  "PLR1701",
  "PLR1714",
  "PLR5501",
  "PLW0602",
  "PLW0603",
  "PLW2901",
  "RUF012",
  "RUF100",
  "W191",  # tab-indent, redundant when using formatter
]
line-length = 99
target-version = "py37"

[tool.ruff.mccabe]
max-complexity = 61

[tool.ruff.pylint]
allow-magic-value-types = ["bytes", "int", "str"]
max-args = 14
max-branches = 58
max-returns = 13
max-statements = 166

[tool.ruff.per-file-ignores]
"micropython/aiorepl/aiorepl.py" = ["PGH001"]

# manifest.py files are evaluated with some global names pre-defined
"**/manifest.py" = ["F821"]
"ports/**/boards/manifest*.py" = ["F821"]

# ble multitests are evaluated with some names pre-defined
"micropython/bluetooth/aioble/multitests/*" = ["F821"]

[tool.ruff.format]
